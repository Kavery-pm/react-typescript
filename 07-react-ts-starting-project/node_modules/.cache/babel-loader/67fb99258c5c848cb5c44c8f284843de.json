{"ast":null,"code":"var _jsxFileName = \"E:\\\\react-ts\\\\07-react-ts-starting-project\\\\src\\\\components\\\\NewTodo.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewTodo = props => {\n  _s();\n\n  const todoTextInput = useRef(null);\n\n  const submitHandler = event => {\n    event.preventDefault();\n    const todoText = todoTextInput.current.value;\n\n    if (todoText.trim().length === 0) {\n      return;\n    }\n\n    props.onAddTodo(todoText);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"todo\",\n      children: \"Todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"todo\",\n      type: \"text\",\n      ref: todoTextInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Add a todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NewTodo, \"VFhBdrkpsDzLCMtYSzLMx5Ia2Po=\");\n\n_c = NewTodo;\nexport default NewTodo;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewTodo\");","map":{"version":3,"sources":["E:/react-ts/07-react-ts-starting-project/src/components/NewTodo.tsx"],"names":["React","useRef","NewTodo","props","todoTextInput","submitHandler","event","preventDefault","todoText","current","value","trim","length","onAddTodo"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;;;AAEA,MAAMC,OAAkD,GAAIC,KAAD,IAAW;AAAA;;AACpE,QAAMC,aAAa,GAAGH,MAAM,CAAmB,IAAnB,CAA5B;;AACA,QAAMI,aAAa,GAAIC,KAAD,IAA4B;AAChDA,IAAAA,KAAK,CAACC,cAAN;AACA,UAAMC,QAAQ,GAAGJ,aAAa,CAACK,OAAd,CAAuBC,KAAxC;;AACA,QAAIF,QAAQ,CAACG,IAAT,GAAgBC,MAAhB,KAA2B,CAA/B,EAAkC;AAChC;AACD;;AACFT,IAAAA,KAAK,CAACU,SAAN,CAAgBL,QAAhB;AACA,GAPD;;AAQA,sBACE;AAAM,IAAA,QAAQ,EAAEH,aAAhB;AAAA,4BACE;AAAO,MAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAO,MAAA,EAAE,EAAC,MAAV;AAAiB,MAAA,IAAI,EAAC,MAAtB;AAA6B,MAAA,GAAG,EAAED;AAAlC;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAjBD;;GAAMF,O;;KAAAA,O;AAkBN,eAAeA,OAAf","sourcesContent":["import React, { useRef } from \"react\";\r\nimport classes from './N'\r\nconst NewTodo:React.FC<{onAddTodo: (text:string)=>void}> = (props) => {\r\n  const todoTextInput = useRef<HTMLInputElement>(null);\r\n  const submitHandler = (event: React.FormEvent) => {\r\n    event.preventDefault();\r\n    const todoText = todoTextInput.current!.value;\r\n    if (todoText.trim().length === 0) {\r\n      return;\r\n    }\r\n   props.onAddTodo(todoText);\r\n  };\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <label htmlFor=\"todo\">Todo</label>\r\n      <input id=\"todo\" type=\"text\" ref={todoTextInput}></input>\r\n      <button>Add a todo</button>\r\n    </form>\r\n  );\r\n};\r\nexport default NewTodo;\r\n"]},"metadata":{},"sourceType":"module"}